---
title: "Alignment Data"
date: "`r format(Sys.time(), '%d %B, %Y')`"  
output: 
  html_document:
    theme: readable
    highlight: zenburn
    toc: true
    toc_float: true
    number_sections: true
    code_folding: show
    code_download: true
---

# Software and Chunk Options

```{r setup, include=TRUE}
library(knitr)
library(tidyverse)
knitr::opts_chunk$set(
  echo = TRUE,         #Display code chunks
  eval = FALSE,         #Evaluate code chunks
  warning = FALSE,     #Hide warnings
  message = FALSE,    # Hide messages
  fig.width = 6,       #Set plot width in inches
  fig.height = 4,      #Set plot height in inches
  fig.align = "center" #Align plots to the center
)
```

# RNA-seq

Look at GTF

```{r, engine='bash', eval=TRUE}
head /home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/Amil/ncbi_dataset/data/GCF_013753865.1/genomic.gtf 
```

## Getting exon coordinates

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2_extract_exons.py \
/home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/Amil/ncbi_dataset/data/GCF_013753865.1/genomic.gtf \
> ../output/06-Apulcra-hisat/m_exon.tab
```

```{r, engine='bash', eval=TRUE}
head ../output/06-Apulcra-hisat/m_exon.tab
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2_extract_splice_sites.py \
/home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/Amil/ncbi_dataset/data/GCF_013753865.1/genomic.gtf \
> ../output/06-Apulcra-hisat/m_splice_sites.tab
```

```{r, engine='bash', eval=TRUE}
head ../output/06-Apulcra-hisat/m_splice_sites.tab
```

## Indexing Genome with splice information

Generic Code

```         
"${programs_array[hisat2_build]}" \
"${genome_fasta}" \
"${genome_index_name}" \
--exon "${exons}" \
--ss "${splice_sites}" \
-p "${threads}" \
2> hisat2-build_stats.txt
```

```{r, engine='bash', eval=TRUE}
head /home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/Amil/ncbi_dataset/data/GCF_013753865.1/GCF_013753865.1_Amil_v2.1_genomic.fna
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2-build \
/home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/Amil/ncbi_dataset/data/GCF_013753865.1/GCF_013753865.1_Amil_v2.1_genomic.fna \
../output/06-Apulcra-hisat/GCF_013753865.1_Amil_v2.1 \
--exon ../output/06-Apulcra-hisat/m_exon.tab \
--ss ../output/06-Apulcra-hisat/m_splice_sites.tab \
-p 40 \
/home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/Amil/ncbi_dataset/data/GCF_013753865.1/genomic.gtf \
2> ../output/06-Apulcra-hisat/hisat2-build_stats.txt
```

```{r, engine='bash', eval=TRUE}
head -20 ../output/06-Apulcra-hisat/hisat2-build_stats.txt
```

## Alignment

Generic code

```         
Hisat2 alignments "${programs_array[hisat2]}" \
-x "${genome_index_name}"-1 "${fastq_list_R1}" \
-2 "${fastq_list_R2}"-S "${sample_name}".sam \
2> "${sample_name}"-hisat2_stats.txt
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2 \
-x ../output/06-Apulcra-hisat/GCF_013753865.1_Amil_v2.1 \
-p 48 \
-1 /home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/SRR8601366_1.fastq \
-2 /home/shared/8TB_HDD_01/sr320/github/deep-dive/D-Apul/data/SRR8601366_2.fastq \
-S ../output/06-Apulcra-hisat/SRR8601366_mil.sam \
2>&1 | tee ../output/06-Apulcra-hisat/hisat2_stats.txt
```

```{r, engine='bash', eval=TRUE}
head ../output/06-Apulcra-hisat/SRR8601366_mil.sam
```

```{r, engine='bash', eval=TRUE}
tail ../output/06-Apulcra-hisat/SRR8601366_mil.sam
```

This is a single read alignment record in the SAM file format. Each field in the record represents a specific piece of information about the aligned read. Here's a breakdown of each field in the given SAM record:

1.  **`SRR8601366.9176811`**: Read name or identifier, a unique string assigned to the read.

2.  **`409`**: SAM bitwise FLAG, an integer value that encodes information about the read's mapping status, strand, and paired-end information. In this case, the value 409 means the read is part of a paired-end sequence and is aligned in the reverse direction.

3.  **`NW_025322628.1`**: Reference sequence name or chromosome on which the read is aligned.

4.  **`3460`**: 1-based leftmost mapping position of the read on the reference sequence.

5.  **`0`**: Mapping quality, an integer value that represents the confidence in the alignment. A value of 0 indicates that the mapping quality is unavailable or not provided.

6.  **`3S64M9S`**: CIGAR string, which represents the alignment of the read to the reference. In this case, it means 3 soft-clipped bases (3S), 64 matched bases (64M), and 9 soft-clipped bases (9S) at the end.

7.  **`=`**: Reference name of the mate/next read. The equal sign (=) indicates that the mate read is aligned to the same reference sequence.

8.  **`3460`**: 1-based leftmost mapping position of the mate/next read.

9.  **`0`**: Observed template length, the inferred size of the whole template or insert. In this case, the value is 0, indicating the information is not available or not meaningful.

10. **`GAACTGACCGTTCTGGGTTGCTTTTCCAACCTGGCCACGGATAGAGACTTCAGCATCGCAGATAGGGAGATCCGAC`**: Read sequence, the actual bases of the read.

11. **`EEEA/EEAEEA/EEEEEEEE/EEEEEAEE/EEEEEEEEEEEEAEAEEEEEAEEEEEEEAEEEEEEEEEEEAAAAA6`**: Base quality string, Phred-scaled quality scores for each base in the read sequence, encoded as ASCII characters. 12-20: Optional fields, providing additional information about the alignment:

-   **`AS:i:-12`**: Alignment score.

-   **`ZS:i:-12`**: Secondary alignment score.

-   **`XN:i:0`**: Number of ambiguous bases in the reference.

-   **`XM:i:0`**: Number of mismatches in the alignment.

-   **`XO:i:0`**: Number of gap openings.

-   **`XG:i:0`**: Number of gap extensions.

-   **`NM:i:0`**: Edit distance to the reference.

-   **`MD:Z:64`**: String for mismatching positions.

-   **`YT:Z:UP`**: Platform unit.

-   **`NH:i:5`**: Number of reported alignments that contain the query in the current record.

This SAM record provides a comprehensive representation of the read's alignment, base qualities, and various other properties that can be used for downstream analyses.

# RNA-seq II

```{r, engine='bash'}
cd ../data
curl -O https://gannet.fish.washington.edu/seashell/snaps/HBXI01.fasta
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2-build \
-f ../data/HBXI01.fasta \
../output/HBXI01.fasta.index
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2 \
-x ../output/HBXI01.fasta.index \
-p 4 \
-1 /home/shared/8TB_HDD_01/snow_crab/5010/exp01/5010_4_S4_L003_R1_001.fastq.gz \
-2 /home/shared/8TB_HDD_01/snow_crab/5010/exp01/5010_4_S4_L003_R2_001.fastq.gz \
-S ../output/4_HBXI01.sam
```

```{r, engine='bash', eval=TRUE}
head ../output/4_HBXI01.sam
tail ../output/4_HBXI01.sam
```

# DNA Methylation Alignment

``` bash
find ${reads_dir}*_1.fq.gz \
| xargs basename -s _R1_val_1.fq.gz | xargs -I{} ${bismark_dir}/bismark \
--path_to_bowtie ${bowtie2_dir} \
-genome ${genome_folder} \
-p 4 \
-score_min L,0,-0.6 \
--non_directional \
-1 ${reads_dir}{}_R1_val_1.fq.gz \
-2 ${reads_dir}{}_R2_val_2.fq.gz

find *.bam | \
xargs basename -s .bam | \
xargs -I{} ${bismark_dir}/deduplicate_bismark \
--bam \
--paired \
{}.bam
```

``` bash
# Sort files for methylkit and IGV

find *deduplicated.bam | \
xargs basename -s .bam | \
xargs -I{} ${samtools} \
sort --threads 28 {}.bam \
-o {}.sorted.bam

# Index sorted files for IGV
# The "-@ 16" below specifies number of CPU threads to use.

find *.sorted.bam | \
xargs basename -s .sorted.bam | \
xargs -I{} ${samtools} \
index -@ 28 {}.sorted.bam
```

```{r, engine='bash', echo=FALSE}
cd ../data
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/scrubbed/120321-cvBS/19F_R1_val_1_bismark_bt2_pe.deduplicated.sorted.bam
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/scrubbed/120321-cvBS/19F_R1_val_1_bismark_bt2_pe.deduplicated.sorted.bam.bai
```

```{r, engine='bash', echo=FALSE}
cd ../data
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/data/Cvirg-genome/GCF_002022765.2_C_virginica-3.0_genomic.fa
curl -O https://gannet.fish.washington.edu/seashell/bu-mox/data/Cvirg-genome/GCF_002022765.2_C_virginica-3.0_genomic.fa.fai
```

```{r, engine='bash'}
/home/shared/samtools-1.12/samtools tview \
../data/19F_R1_val_1_bismark_bt2_pe.deduplicated.sorted.bam \
../data/GCF_002022765.2_C_virginica-3.0_genomic.fa
```

![tview](http://gannet.fish.washington.edu/seashell/snaps/Monosnap_sr320__sr320raven_homeshared8TB_HDD_01sr320githubsteven-crabby-duckcode__ssh_sr320raven.fish.washington.edu__12455_2023-04-29_15-08-35.png)

# WGS

```{r, engine='bash'}
cd ../data
curl -O https://owl.fish.washington.edu/nightingales/C_gigas/F143n08_R2_001.fastq.gz
curl -O https://owl.fish.washington.edu/nightingales/C_gigas/F143n08_R1_001.fastq.gz
```

```{r, engine='bash'}
cd ../data
curl -O https://gannet.fish.washington.edu/panopea/Cg-roslin/cgigas_uk_roslin_v1_genomic-mito.fa
curl -O https://gannet.fish.washington.edu/panopea/Cg-roslin/cgigas_uk_roslin_v1_genomic-mito.fa.fai
curl -O https://gannet.fish.washington.edu/panopea/Cg-roslin/GCF_902806645.1_cgigas_uk_roslin_v1_genomic-mito.gtf
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2-build \
-f ../data/cgigas_uk_roslin_v1_genomic-mito.fa \
../output/cgigas_uk_roslin_v1_genomic-mito.index
```

```{r, engine='bash'}
/home/shared/hisat2-2.2.1/hisat2 \
-x ../output/cgigas_uk_roslin_v1_genomic-mito.index \
-p 4 \
-1 ../data/F143n08_R1_001.fastq.gz \
-2 ../data/F143n08_R2_001.fastq.gz \
-S ../output/F143_cgigas.sam
```

```{r, engine='bash', eval=TRUE}
tail -1 ../output/F143_cgigas.sam
```

```{r, engine='bash'}
# Convert SAM to BAM, using 40 additional threads
/home/shared/samtools-1.12/samtools view -@ 40 -bS \
../output/F143_cgigas.sam > ../output/F143_cgigas.bam
```

```{r, engine='bash'}
# Sort the BAM file, using 40 additional threads
/home/shared/samtools-1.12/samtools sort -@ 40 \
../output/F143_cgigas.bam -o ../output/F143_cgigas_sorted.bam

# Index the sorted BAM file (multi-threading is not applicable to this operation)
/home/shared/samtools-1.12/samtools index \
../output/F143_cgigas_sorted.bam
```

### Calling SNPs

#### gatk

```{r, engine='bash'}

/home/shared/gatk-4.2.5.0/gatk CreateSequenceDictionary \
-R ../data/cgigas_uk_roslin_v1_genomic-mito.fa

```

```{r, engine='bash'}
/home/shared/samtools-1.12/samtools faidx \
../data/cgigas_uk_roslin_v1_genomic-mito.fa
```

```{r, engine='bash'}
/home/shared/samtools-1.12/samtools view -H ../output/F143_cgigas_sorted.bam | head


```

```{r, engine='bash'}
/home/shared/samtools-1.12/samtools addreplacerg \
-r "ID:F143" \
-r "SM:F143" \
-o ../output/F143_cgigas_sorted_rg.bam \
../output/F143_cgigas_sorted.bam
```


```{r, engine='bash'}
/home/shared/samtools-1.12/samtools index ../output/F143_cgigas_sorted_rg.bam
```

```{r, engine='bash'}
/home/shared/gatk-4.2.5.0/gatk --java-options "-Xmx40G" HaplotypeCaller \
-R ../data/cgigas_uk_roslin_v1_genomic-mito.fa \
-I ../output/F143_cgigas_sorted_rg.bam \
-O ../output/F143_variants.vcf
```

```{r, engine='bash', eval=TRUE}
tail ../output/F143_variants.vcf
```



#### mpileup (follows text)

```{r, engine='bash'}
/home/shared/samtools-1.12/samtools mpileup --no-BAQ \
--fasta-ref ../data/cgigas_uk_roslin_v1_genomic-mito.fa \
../output/F143_cgigas_sorted.bam
```

```{r, engine='bash'}
/home/shared/bcftools-1.14/bcftools mpileup --threads 40 --no-BAQ \
--fasta-ref ../data/cgigas_uk_roslin_v1_genomic-mito.fa \
../output/F143_cgigas_sorted.bam \
| /home/shared/bcftools-1.14/bcftools call -mv -Oz \
> ../output/F143_mpile.vcf.gz
```

```{r, engine='bash'}
/home/shared/bcftools-1.14/bcftools mpileup --threads 40 --no-BAQ \
--fasta-ref ../data/cgigas_uk_roslin_v1_genomic-mito.fa \
../output/F143_cgigas_sorted.bam > ../output/F143_mpileup_output.txt
```

```{r, engine='bash', eval=TRUE}
tail ../output/F143_mpileup_output.txt
```

```{r, engine='bash'}
cat ../output/F143_mpileup_output.txt \
| /home/shared/bcftools-1.14/bcftools call -mv -Oz \
> ../output/F143_mpile.vcf.gz
```

```{r, engine='bash', eval=TRUE}
zgrep "^##" -v ../output/F143_mpile.vcf.gz | \
awk 'BEGIN{OFS="\t"} {split($8, a, ";"); print $1,$2,$4,$5,$6,a[1],$9,$10}' | tail

```

```{r, engine='bash'}
/home/shared/bcftools-1.14/bcftools call \
-v -c --ploidy 2 ../output/F143_mpile.vcf.gz \
> ../output/F143_mpile_calls.vcf
```

# Copy Number Variation

This code is executing a command-line script using the **`coverageBed`** tool from the bedtools2 suite. The bedtools2 suite is a powerful set of tools for performing various genomic analyses, particularly for comparing genomic features in the context of the BED, GFF/GTF, and VCF file formats.

Here's a breakdown of what this specific command is doing:

1.  **`/home/shared/bedtools2/bin/coverageBed`**: This is the path to the **`coverageBed`** tool, which computes the depth of coverage (number of reads mapped) for each genomic feature in a GFF or BED file.

2.  **`-hist`**: This flag tells the **`coverageBed`** tool to output a histogram of coverage for each feature in the GFF file. The histogram reports the coverage at each depth of coverage (from 0 to the max depth observed).

```
-hist	
Report a histogram of coverage for each feature in A as well as a summary histogram for _all_ features in A.
Output (tab delimited) after each feature in A:
1) depth
2) # bases at depth
3) size of A
4) % of A at depth
```

1.  **`-a ../data/cgigas_uk_roslin_v1_gene.gff`**: This specifies the input GFF file that contains the genomic features of interest (e.g., genes, exons, etc.). In this case, it's a file named **`cgigas_uk_roslin_v1_gene.gff`** located in the **`../data/`** directory.

2.  **`-b ../output/F143_cgigas_sorted_rg.bam`**: This specifies the input BAM file that contains the aligned sequencing reads. In this case, it's a file named **`F143_cgigas_sorted_rg.bam`** located in the **`../output/`** directory.

3.  **`> ../output/F143_cov.txt`**: This redirects the output of the **`coverageBed`** tool to a file named **`F143_cov.txt`** located in the **`../output/`** directory. This file will contain the coverage histogram for each feature in the input GFF file.

In summary, this command is calculating the coverage of sequencing reads (from the BAM file) across genomic features (from the GFF file) and generating a histogram of coverage depths for each feature. The output is saved to a file named **`F143_cov.txt`** in the **`../output/`** directory.

```{r, engine='bash'}
/home/shared/bedtools2/bin/coverageBed \
-hist \
-a ../data/cgigas_uk_roslin_v1_gene.gff \
-b ../output/F143_cgigas_sorted_rg.bam \
> ../output/F143_cov.txt


```

```{r, engine='bash', eval=TRUE}
head ../output/F143_cov.txt
```


```{r, engine='bash', eval=TRUE, cache=TRUE}
sort -t $'\t' -k10,10 ../output/F143_cov.txt | tail


```

